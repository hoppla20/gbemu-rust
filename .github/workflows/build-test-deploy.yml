name: Build, test, and deploy

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed
    branches:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest

    if: ${{ github.event.action != 'closed' }}

    steps:
      - uses: actions/checkout@v4

      - name: Install nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Build native application
        run: >-
          nix develop --command
          cargo build --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gbemu-rust-app-native-linux-amd64-linux-gnu
          path: ./target/release/gbemu_rust_app

      - name: Build web application - main
        working-directory: ./gbemu_rust_app
        run: |
          GITHUB_REPOSITORY_NAME="${GITHUB_REPOSITORY#*/}"
          PAGES_BASE_URL="https://${GITHUB_REPOSITORY_OWNER}.github.io/${GITHUB_REPOSITORY_NAME}"

          if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
            # main branch
            PAGES_WEB_APP_URL="${PAGES_BASE_URL}/app"
          elif [ "${GITHUB_HEAD_REF}" != "" ]; then
            # pull request review
            GITHUB_PR_NUMBER="$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; /^refs\/pull/ { print $3 }')"
            PAGES_WEB_APP_URL="${PAGES_BASE_URL}/pr/pr-${GITHUB_PR_NUMBER}/app"
          fi

          nix develop --command trunk build --release --public-url "${PAGES_WEB_APP_URL}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gbemu-rust-app-web
          path: ./gbemu_rust_app/dist

  build-docs:
    runs-on: ubuntu-latest

    if: ${{ github.event.action != 'closed' }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v2
        with:
          mdbook-version: latest
      - name: Build docs
        run: mdbook build docs

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: ./docs/book/

  tests:
    runs-on: ubuntu-latest

    if: ${{ github.event.action != 'closed' }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Run tests and generate coverage
        run: >-
          nix develop --command
          cargo llvm-cov nextest --package gbemu_rust_lib --cargo-profile release --no-cfg-coverage --html

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: ./target/llvm-cov/html/

  deploy-pages:
    runs-on: ubuntu-latest

    needs:
      - build
      - build-docs
      - tests

    permissions:
      contents: write
      pages: write
      id-token: write
      pull-requests: write

    concurrency:
      group: pages-${{ github.ref }}

    # only on the main branch and if no previous jobs failed
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4

      - run: mv docs site
      - run: mv code-coverage-report site/
      - run: mv gbemu-rust-app-web site/app

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./site
          branch: gh-pages
          clean-exclude: pr
          force: false

  deploy-pages-review:
    runs-on: ubuntu-latest

    needs:
      - build
      - build-docs
      - tests

    permissions:
      contents: write
      pages: write
      id-token: write
      pull-requests: write

    concurrency:
      group: review-${{ github.ref }}

    # only on PR branches and if no previous jobs failed
    if: ${{ always() && github.head_ref != '' && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4

      - name: Prepare site
        if: ${{ !contains(needs.*.result, 'skipped') }}
        run: |
          mv docs site
          mv code-coverage-report site/
          mv gbemu-rust-app-web site/app

      - name: Deploy to GitHub Pages Review
        uses: rossjrw/pr-preview-action@v1
        if: ${{ github.event_name == 'pull_request' }}
        with:
          source-dir: ./site
          preview-branch: gh-pages
          umbrella-dir: pr
          action: auto
